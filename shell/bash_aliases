#!/bin/bash
#
# ░█▀▄░█▀█░█▀▀░█░█░░░█▀█░█░░░▀█▀░█▀█░█▀▀░█▀▀░█▀▀
# ░█▀▄░█▀█░▀▀█░█▀█░░░█▀█░█░░░░█░░█▀█░▀▀█░█▀▀░▀▀█
# ░▀▀░░▀░▀░▀▀▀░▀░▀░░░▀░▀░▀▀▀░▀▀▀░▀░▀░▀▀▀░▀▀▀░▀▀▀

# Alias Definitions
alias vi="/usr/bin/nvim"
alias ls="ls -v --color=always --group-directories-first"
alias grep="grep --color=always"
alias less="less --quit-if-one-screen -X --RAW-CONTROL-CHARS"
alias octave="octave --silent"
# alias gre="/home/nikin/.local/bin/sioyek /home/nikin/GREPrep/Princeton2022.epub"
alias sudo="sudo "
alias todo="/usr/bin/nvim ${HOME}/Dropbox/TODO.md"
alias pqiv="pqiv 2> /dev/null"
## Works with .pptx and .docx POST DEPRECATION
alias convert2pdf="soffice --headless --convert-to pdf"
alias vocab="/usr/bin/nvim ${HOME}/Dropbox/Vocab.tex"

function blucon(){
    JBL="F8:5C:7D:AC:31:F9"
    SONY="74:B7:E6:0B:CE:64"
    ANKER="F4:B6:2D:08:0C:EA"

    connect_device() {
        local device_mac=$1
        local profile=$2

        bluetoothctl -- connect ${device_mac}

        if [ -n "$profile" ]; then
            sleep 1
            pactl set-card-profile "bluez_card.${device_mac//:/_}" $profile
        fi
    }



    case $1 in 
        -jbl)
            sleep 2
            connect_device ${JBL} ;;
        -sony)
            connect_device ${SONY} a2dp_sink ;;
        -anker)
            connect_device ${ANKER} a2dp_sink ;;
        -sony-hfp)
            connect_device ${SONY} handsfree_head_unit ;;
        -anker-hfp)
            connect_device ${ANKER} handsfree_head_unit ;;
        -r) 
            sudo systemctl restart bluetooth
            ;;
        *) 
            echo "Device not found."
            exit 1
    esac

}

# Function Definitions
function weather() {
  curl wttr.in/${1}
}


function cloudsync() {

    function pushNotes() {
        pushd ~/notes
        branch=$(git branch | awk ' /\*/ {print $2} ')
        if [ -n "$(git status -s)" ]; then
            git pull
            git add --all
            git commit -m "o.O"
            git push -u origin ${branch} --verbose
        else
            echo "nothing to commit, working tree clean"
        fi
        popd > /dev/null
    }

    function pushDropbox() {
        dropbox-cli start > /dev/null 2>&1
        if [ "$(dropbox-cli status)" = "Up to date" ]; then
            echo "Dropbox is up to date"
        else
            echo "Synchronization in progress..."
            until [ "$(dropbox-cli status)" = "Up to date" ]; do 
                :
            done
            echo "Synchronization complete"
        fi
        dropbox-cli stop
    }

    case $1 in 
        -n) pushNotes ;;
        -d) pushDropbox ;;
        *) pushNotes && pushDropbox ;;
    esac
}

function def() {
    sdcv -n --utf8-output --color "$@" 2>&1 | \
        fold --width=$(tput cols) | \
        less --quit-if-one-screen -RX
    }





