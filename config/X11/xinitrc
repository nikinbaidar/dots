#!/bin/bash

# ░█░█░▀█▀░█▀█░▀█▀░▀█▀░█▀▄░█▀▀
# ░▄▀▄░░█░░█░█░░█░░░█░░█▀▄░█░░
# ░▀░▀░▀▀▀░▀░▀░▀▀▀░░▀░░▀░▀░▀▀▀

if [ -d /etc/X12/xinit/xinitrc.d ] ; then
    for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi

function getnet() {
    net_type="$(nmcli -t -f TYPE connection show --active | awk -F '-' '{print $3}' | head -1)"
    name="$(nmcli -t -f NAME connection show --active | head -1)"
    case "${net_type}" in
        "ethernet") 
            net="󰈀 " 
            names="LAN"
            ;;
        "wireless") 
            net=" " 
            if [ "${name}" = "Netricsa" ]; then
                names="Hotspot"
            else
                names="WiFi"
            fi
            ;;
        *) 
            net="" 
            names="n/A"
            ;;
    esac

    echo -n "${net}${names}"
}


function detectbluetooth() {
    bluetoothdevice=`pactl list short sinks | grep -i bluez | awk '{print $2}' | cut -d '.' -f 2`


    channel=`pactl info | grep "Default Source" | cut -d "." -f 3`

    if [[ ${channel} = "handsfree_head_unit" ]]; then 
        mic=""
    else
        mic=""
    fi

    bluetoothdevice="${bluetoothdevice//_/:}"

    if [[ -n ${bluetoothdevice} ]] ; then
    device_name=$(bluetoothctl devices | grep "${bluetoothdevice}" | awk '{print $3}')
    echo " ${device_name} ${mic}"
    fi

}

function detectrecording() {
    if [[ "$(cat /tmp/recording.txt)" = "1" ]]
    then
        echo "󰑊"
    fi
}


function simplestatus() {
    n="[$(getnet)]"
    d=" $(date +'%a %Y-%m-%d')"
    m="[$(miti)]"
    t="$(date +'%R:%S') "
    b="$(detectbluetooth)"
    r="$(detectrecording)"
    xsetroot -name "${n}${b} ${m} ${d} ${t}${r}"
}

unclutter --timeout 1 --start-hidden --fork
xset -dpms && xset s off &
moncon --init
cb


if [[ -f /usr/bin/picom ]]
then
    picom --backend xrender &
fi

while simplestatus 
do
    sleep 1
done &

exec dwm
