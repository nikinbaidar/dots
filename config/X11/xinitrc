#!/bin/bash

# ░█░█░▀█▀░█▀█░▀█▀░▀█▀░█▀▄░█▀▀
# ░▄▀▄░░█░░█░█░░█░░░█░░█▀▄░█░░
# ░▀░▀░▀▀▀░▀░▀░▀▀▀░░▀░░▀░▀░▀▀▀

if [ -d /etc/X12/xinit/xinitrc.d ] ; then
    for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi


if [[ -f /usr/bin/picom ]]; then
    picom --backend xrender &
fi

function getnet() {
    net_type="$(nmcli -t -f TYPE connection show --active | awk -F '-' '{print $3}' | head -1)"
    name="$(nmcli -t -f NAME connection show --active | head -1)"
    case "${net_type}" in
        "ethernet") 
            net="󰈀" 
            name="LAN"
            ;;
        "wireless") 
            net=" " 
            ;;
        *) 
            net="" 
            name="n/A"
            ;;
    esac

    echo -n "${net}${name}"
}


function detectbluetooth() {
    bluetoothdevice=`pactl list short sinks | grep -i bluez | awk '{print $2}' | cut -d '.' -f 2`

    bluetoothdevice="${bluetoothdevice//_/:}"

    channel=`pactl info | grep "Default Source" | cut -d "." -f 3`

    if [[ ${channel} != "handsfree_head_unit" || -f /tmp/muted ]]; then 
        mic=""
    else
        mic=""
    fi

    if [[ -n ${bluetoothdevice} ]]; then
        device_name=$(bluetoothctl devices | \
            awk -v dev="$bluetoothdevice" '$0 ~ dev {for (i=3; i<=NF; i++) printf "%s%s", $i, (i<NF ? OFS : ORS)}')
        echo " [${mic} ${device_name}]"
    fi

}

function detectrecording() {
    if [[ "$(head -n1 /tmp/screencast.nikin/status)" = "1" ]]
    then
        echo "[ REC] "
    elif [[ "$(head -n1 /tmp/screencast.nikin/status)" = "0" ]]
    then
        echo "[ REC] "
    fi
}



function mysimplestatus() {
    n="[$(getnet)]"
    d=" $(date +'%a %Y-%m-%d')"
    m="[$(miti)]"
    t="$(date +'%R:%S') "
    b="$(detectbluetooth)"
    r="$(detectrecording)"
    if [[ $(battery --status) = "Charging" ]]
    then
        B="[󰂄$(battery)]"
    else
        B="[󱊣$(battery)]"
    fi
    xsetroot -name "${n}${b} ${d} ${m} ${t}${B}${r}"
}
unclutter --timeout 1 --start-hidden --fork
xset -dpms && xset s off &
moncon --init
cb

while mysimplestatus 
do
    sleep 1
done &

exec dwm
